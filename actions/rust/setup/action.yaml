name: 'Setup Rust Environment for Unit Testing'
description: 'Prepares a Rust environment for running unit tests, including toolchain setup, caching, and environment configuration.'

inputs:
  rust-version:
    description: 'The version of the Rust toolchain to use.'
    required: false
    default: 'stable'
  cache-key-prefix:
    description: 'A prefix to use for the cache key, ensuring itâ€™s unique for the job.'
    required: false
    default: 'rust-cache-'
  additional-env-vars:
    description: 'A JSON string containing additional environment variables to set.'
    required: false

outputs:
  rust-path:
    description: 'The path to the installed Rust toolchain.'

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ inputs.rust-version }}
        profile: minimal
        override: true
        components: rustfmt, clippy

    - name: Set up caching for Cargo registry
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ inputs.cache-key-prefix }}-${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ inputs.cache-key-prefix }}-${{ runner.os }}-cargo-registry-

    - name: Set up caching for Cargo target directory
      uses: actions/cache@v2
      with:
        path: target
        key: ${{ inputs.cache-key-prefix }}-${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ inputs.cache-key-prefix }}-${{ runner.os }}-cargo-target-

    - name: Configure additional environment variables
      shell: bash
      run: |
        if [ -n "${{ inputs.additional-env-vars }}" ]; then
          echo "${{ inputs.additional-env-vars }}" | jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' >> $GITHUB_ENV
        fi

    - name: Output Rust toolchain path
      shell: bash
      run: |
        echo "rust-path=$(which rustc)" >> $GITHUB_ENV
