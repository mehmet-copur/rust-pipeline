name: 'Run End-to-End Tests'
description: 'Executes end-to-end tests for the Rust project, with customizable test environment setup.'

inputs:
  setup-env-script:
    description: 'Path to a script that sets up the test environment.'
    required: false
  test-command:
    description: 'The command to run e2E tests. Defaults to "cargo test" if a custom one is not provided.'
    required: false
    default: 'cargo test --test e2e'
  teardown-env-script:
    description: 'Path to a script that tears down the test environment.'
    required: false
  additional-args:
    description: 'Additional arguments to pass to the test command.'
    required: false
  test-environment-variables:
    description: 'Environment variables in JSON format to be set for the test command.'
    required: false
  junit-output:
    description: 'If set, will produce a JUnit XML report at this path.'
    required: false

outputs:
  junit-report:
    description: 'The JUnit XML report generated by the tests.'

runs:
  using: 'composite'
  steps:
    - name: Setup Test Environment
      if: inputs.setup-env-script != ''
      shell: bash
      run: |
        echo "Setting up the test environment..."
        chmod +x ${{ inputs.setup-env-script }}
        ./${{ inputs.setup-env-script }}
        if [ $? -ne 0 ]; then
          echo "Failed to set up the test environment. Exiting."
          exit 1
        fi

    - name: Set Test Environment Variables
      if: inputs.test-environment-variables != ''
      shell: bash
      run: |
        echo "Setting up environment variables for testing..."
        echo '${{ inputs.test-environment-variables }}' | jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' >> $GITHUB_ENV

    - name: Run End-to-End Tests
      shell: bash
      run: |
        test_command="${{ inputs.test-command }}"
        additional_args="${{ inputs.additional-args }}"
        junit_output="${{ inputs.junit-output }}"
        echo "Running end-to-end tests with the command: $test_command"
        if [ -n "$additional_args" ]; then
          test_command="$test_command $additional_args"
        fi
        if [ -n "$junit_output" ]; then
          test_command="$test_command | tee test_output.txt"
          cargo2junit < test_output.txt > $junit_output
          echo "::set-output name=junit-report::$junit_output"
        fi
        $test_command

    - name: Teardown Test Environment
      if: inputs.teardown-env-script != ''
      shell: bash
      run: |
        echo "Tearing down the test environment..."
        chmod +x ${{ inputs.teardown-env-script }}
        ./${{ inputs.teardown-env-script }}

    - name: Upload Test Artifacts
      if: inputs.junit-output != ''
      uses: actions/upload-artifact@v2
      with:
        name: e2e-test-artifacts
        path: ${{ inputs.junit-output }}
