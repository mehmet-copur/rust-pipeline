name: Rust CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches:
      - main

jobs:
  setup-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rust with caching
        uses: org-name/github-actions-library/actions/rust/setup-with-cache@v1
        with:
          rust-version: 'stable'
          cache-key-prefix: 'rust-ci-${{ github.run_id }}'

      - name: Build Rust Project
        uses: org-name/github-actions-library/actions/rust/build@v1

  test:
    runs-on: ubuntu-latest
    needs: setup-and-build
    steps:
      - name: Test Rust Project
        uses: org-name/github-actions-library/actions/rust/test@v1
        with:
          all-features: 'true'

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Dependency Vulnerability Scan
        uses: org-name/github-actions-library/actions/security/dependency-scan@v1

      - name: Code Security Scan
        uses: org-name/github-actions-library/actions/security/code-scan@v1

  docker-build-and-push:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - name: Build and Push Docker Image
        uses: org-name/github-actions-library/actions/docker/build-and-push@v1
        with:
          dockerfile: './Dockerfile'
          context: '.'
          image-name: 'myapp/${{ github.repository }}'
          image-tag: '${{ github.sha }}'
          registry-url: 'docker.io'
          registry-username: ${{ secrets.DOCKER_USERNAME }}
          registry-password: ${{ secrets.DOCKER_PASSWORD }}
